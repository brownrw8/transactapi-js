"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = require("axios");
const FormData = require("form-data");
const base_1 = require("../base");
/**
 * This method is used to upload documents to a particular trade (createTrade).
 *
 * Files uploaded cannot be larger than 100 MB.
 * @link https://api.norcapsecurities.com/admin_v3/documentation?mid=MjMy
 * @param {string} clientID - Transact API Client ID
 * @param {string} developerAPIKey - Transact API Developer Key
 * @param {string} tradeId - Trade ID that is generated by the API
 * @param {string} documentName - Title of the document
 * @param {string | Blob} file - PDF, jpg, and png files are supported
 * @returns {string} statusCode - API Status Code
 * @returns {string} statusDesc - API Status Description
 * @returns {string} document_details - Document has been uploaded Successfully
 */
function default_1({ clientID, developerAPIKey, tradeId, documentName, file, }) {
    return __awaiter(this, void 0, void 0, function* () {
        const formData = new FormData();
        formData.append("clientID", clientID);
        formData.append("developerAPIKey", developerAPIKey);
        formData.append("tradeId", tradeId);
        formData.append("documentTitle", `documentTitle0=${documentName}`);
        formData.append("file_name", `filename0=${documentName}.pdf`);
        formData.append("userfile0", file, { filename: `${documentName}.pdf` });
        const config = {
            method: "POST",
            url: base_1.BASE_URL + "uploadTradeAgreement",
            headers: Object.assign({}, formData.getHeaders()),
            data: formData,
        };
        try {
            yield (0, axios_1.default)(config);
            // TODO: figure out how to receive response from file upload
            return {
                statusCode: "101",
                statusDesc: "Ok",
                document_details: "Document has been uploaded Successfully",
            };
        }
        catch (error) {
            throw new Error(error.message);
        }
    });
}
exports.default = default_1;
